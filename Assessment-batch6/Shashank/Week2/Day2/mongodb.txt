use pjpdatabase;


db.createCollection("inventory");
db.inventory.insertOne(
   { _id:'colge200',item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "B" });

db.inventory.insertMany([
   { item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "A" },
   { item: "notebook", qty: 50, size: { h: 8.5, w: 11, uom: "in" }, status: "A" ,price:[{delhi:100}, {mumbai:200}]},
   { item: "paper", qty: 100, size: { h: 8.5, w: 11, uom: "in" }, status: "D" },
   { item: "planner", qty: 75, size: { h: 22.85, w: 30, uom: "cm" }, status: "D" },
   { item: "postcard", qty: 45, size: { h: 10, w: 15.25, uom: "cm" }, status: "A" },
 { item: "journal", qty: 12, size: { h: 14, w: 21, uom: "cm" }, status: "A" },
   { item: "notebook", qty: 150, size: { h: 8.5, w: 11, uom: "in" }, status: "A" },
   { item: "paper", qty: 170, size: { h: 8.5, w: 11, uom: "in" }, status: "D" },
   { item: "planner", qty: 715, size: { h: 22.85, w: 30, uom: "cm" }, status: "D" },
   { item: "postcard", qty: 145, size: { h: 10, w: 15.25, uom: "cm" }, status: "A" },
]);


Selection and projection :db.<docName>.find({<selection/condition>}, {<projection or column name to display>})


question 1 : Select all the data from inventory collection in .pretty() form
------------------Ans--------------------------------------------------------------------
1) db.inventory.find( {} ).pretty();
2) db.inventory.find( {}, {}).pretty();
3) db.inventory.find( {}).pretty();
4) db.inventory.find().pretty();
5) db.inventory.find();

OR : db.inventory.find({$or : [{status:"A"} , {status:"D"}] },{}).pretty();

and : db.inventory.find({$and : [{qty:170} , {status:"D"}] },{}).pretty();

---------------------------------------------------------------------------------------
question 2 : Select all the data from inventory collection in .pretty() form where  status = "A" AND qty < 30
------------------Ans--------------------------------------------------------------------

db.inventory.find({$or:[{status: "B" }, {status: "C" }]},{}).pretty();
1) db.inventory.find( { status: "A", qty: { $lt: 30 } } ).pretty();
2) db.inventory.find( { status: "A", qty: { $lt: 30 } },{} ).pretty()
3) db.inventory.find( { qty: { $lt: 30 } ,status: "A" } ).pretty();
4) db.inventory.find( { qty: { $lt: 30 } ,status: "A" } ,{}).pretty();
5) db.inventory.find($and: [{ qty: { $lt: 30 }} ,{status: "A" }] ).pretty();
6) db.inventory.find({$and: [{ qty: { $lt: 30 }} ,{status: "A" }}]},{} ).pretty();
7) db.inventory.find($and: [{status: "A" },{ qty: { $lt: 30 }} ] ).pretty();
8) db.inventory.find({$and: [{status: "A" },{ qty: { $lt: 30 }} ]},{} ).pretty();
---------------------------------------------------------------------------------------------------------
question 3 : Select all the data from inventory collection in .pretty() form where  status = "D" or  qty < 30 and  display only 2 records
------------------Ans--------------------------------------------------------------------
1) db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] } ).limit(2).pretty();
2) db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] },{} ).limit(2).pretty();
3) db.inventory.find( { $or: [ { qty: { $lt: 30 } },{ status: "A" } ] } ).limit(2).pretty();
4) db.inventory.find( { $or: [ { qty: { $lt: 30 } },{ status: "A" } ] },{} ).limit(2).pretty();
----------------------------------------------------------------------------------------------------------------
question 4 : Select all the data from inventory collection in .pretty() form sort by qty descending order 
------------------Ans--------------------------------------------------------------------
1)db.inventory.find( {} ).sort ({ qty : -1 } ).pretty();
2)db.inventory.find( {},{} ).sort ({ qty : -1 } ).pretty();
3)db.inventory.find( ).sort ({ qty : -1 } ).pretty();
4)db.inventory.find( {} ).sort ({ qty : -1 } );
5)db.inventory.find( ).sort ({ qty : -1 } ).pretty();
------------------------------------------------------------------------------

question 5: Select all the data from inventory collection  and display  the count for status "A"
------------------Ans--------------------------------------------------------------------
 
1) db.inventory.find( {status: "A"} ).count();
2) db.inventory.find( {status: "A"},{} ).count();
---------------------------------------------------------------------------------

question 6 : Select all the data from inventory collection  and display  item and status only
------------------Ans--------------------------------------------------------------------
1) db.inventory.find({  }, {item: 1, status: 1 }).pretty();
2) db.inventory.find({  }, { status: 1,item: 1}).pretty();


------------------------------------------------------------------------------------

question 7 : Select all the data from inventory collection in .pretty() form where  status = "D" or  qty < 30 and  display only item and qty columns
------------------Ans--------------------------------------------------------------------
1) db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] } ,{item: 1, qty: 1 }).pretty();
2) db.inventory.find( { $or: [  { qty: { $lt: 30 } },{ status: "A" } ] } ,{item: 1, qty: 1 }).pretty();
3) db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] } ,{ qty: 1,item: 1, }).pretty();
4) db.inventory.find( { $or: [  { qty: { $lt: 30 } },{ status: "A" } ] } ,{qty: 1 ,item: 1}).pretty();
5) db.inventory.find( { $or: [ { status: "A" }, { qty: { $lt: 30 } } ] } ,{item: 1, qty: 1 });


db.inventory.aggregate(
   [
     {
       $group:
         {
           _id: { status:'A'},
           totalAmount: { $sum: "$qty" },
           count: { $sum: 1 }
         }
     }
   ]
)

db.inventory.update(
   { _id: 'colge200' },
   {
      
     $set: {
       item: "Modified Journal",
       "qty": "2222" 
     }
   }
)

db.inventory.insertOne(
   { _id:'colge200',item: "journal", qty: 25, size: { h: 14, w: 21, uom: "cm" }, status: "B" });






